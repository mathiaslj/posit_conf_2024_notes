---
title: "Pour Some Glitter On It: Custom Quarto Outputs"
---

[Link to video](https://reg.conf.posit.co/flow/posit/positconf24/publiccatalog/page/publiccatalog/session/1712004041983001s1h4)

## Report Design in R: Small Tweaks that Make a Big Difference

-   [Link to slides](https://rfor.us/posit2024slides)
-   [Link to GitHub repo](https://rfor.us/posit2024repo)
-   [Link to report examples](https://rfor.us/consulting)

### Session description

*If you've ever tried to improve how your Quarto-based reports look, you probably felt overwhelmed. I'm a data person, you may have thought, not a designer. It's easy to drown in a sea of design advice, but we at R for the Rest of Us have found that a few small tweaks can make a big difference. In this talk, we will discuss ways that we have learned to make high-quality reports in R. These include ways you can consistently use brand fonts and colors in your report text and in your plots. All of these tweaks are small on their own, but, when combined, have the potential to make a big difference in the quality of your report design.*

### Session notes

-   Design matters! Be consistent, create nice layouts, use nice colors

#### Typst components {#sec:typst_components}

-   typst-show.typ (see simple example [here](https://github.com/rfortherestofus/report-design/blob/main/typst-show.typ))
    -   Takes variables from a .qmd file (title, parameters, etc. defined in YAML at top of qmd document) and passes them into typst
-   typst-template.typ (see simple example [here](https://github.com/rfortherestofus/report-design/blob/main/typst-template.typ))
    -   Uses varaibles defined in typst-show.typ
    -   Set properties of document, fx. `set text(font: "Open sans", size: 12pt)`, `set page(...)`, etc.
    -   Add fx. background rectangle with `background: place(top, rec(...))` or header with `header: ...` (refer to fx. `title` variable defined in typst-show.typ to show in the header)

#### Creating a layout - adding plots

-   [update_geom_defaults](https://ggplot2.tidyverse.org/reference/update_defaults.html) function
-   [Presentation on how to organise multiple plots for parametrised reporting](https://github.com/rfortherestofus/data-viz-parameterized-reporting)

## Reproducible, Dynamic, and Elegant Books with Quarto

[Link to slides](bit.ly/books-conf24)

### Session description

*Building on my experience writing books with Quarto for various audiences (R learners, statistics learners, and Quarto learners), for various venues (self-published and publisher-published), in various formats (HTML books hosted online and PDF books printed), I will share best practices and tips and tricks for authoring reproducible, dynamic, and elegant books with Quarto. I will also highlight a few features from the recently-released Quarto 1.4 that pertain to books (e.g., flexible and custom cross-references, embedding computations from notebooks, and inline code in multiple languages) as well as share examples of how to make your web-hosted books more interactive with tools like webR and shinylive.*

### Session notes

#### Good ressources of books to look at for structure (and content)

-   [Introduction to modern statistics](https://github.com/OpenIntroStat/ims?tab=readme-ov-file)
-   [R for data science](https://github.com/hadley/r4ds)
-   [Quarto the definitive guide](https://github.com/mine-cetinkaya-rundel/quarto-tdg)

::: {.callout-note}
Note the above repos at time of writing this does not use typst but does customisation for HTML and PDF separately. Look into typst!
:::

#### Tips for using quarto

-   Use of [callouts](https://quarto.org/docs/authoring/callouts.html)
    -   Create custom classes by doing `::: {.new_class} ... :::` and defining the class in the `.scss` file like `.new_class { ... }`
-   `_common.R` file in project that sets `options(...)`, `knitr::opts_chunk$set(...)`, [theme_set](https://ggplot2.tidyverse.org/reference/theme_get.html) and [update_geom_defaults](https://ggplot2.tidyverse.org/reference/update_defaults.html)
-   Use existing GitHub actions
    -   See fx. the [build_book.yaml](https://github.com/hadley/r4ds/blob/main/.github/workflows/build_book.yaml) action in R for data science.
    -   See [general quarto actions by quarto_dev](https://github.com/quarto-dev/quarto-actions)

## Designing and Deploying Internal Quarto Templates {#sec:quarto_internal_templates}

### Session description

*Quarto is a game-changer for creating reproducible, parameterized documents. But the beauty of Quarto—that it has so many different use cases with various output formats—can lead to disarray with numerous .qmd files floating around an organization and too much copy-paste when creating something new. Quarto templates are perfect for easing the burden of developing a report and instead standardizing the structure, style, and initial content of your projects, no matter the output format. We’ll discuss tips and tricks for implementing enough html and css to create beautiful documents that match your organization’s branding and also explore how easy it can be to deploy those Quarto templates with a single function within an internal R package.*

### Session notes

Firstly, [a link to a written blog post about this talk](https://meghan.rbind.io/blog/2024-08-14-quarto-templates/)

**Essence of talk**: In the [quarto docs](https://quarto.org/docs/extensions/starter-templates.html) exists guides for creating **public** templates. This talk focuses on how to create internal templates for use in corporations.

-   Use [DevTools](https://developer.chrome.com/docs/devtools) via right-click -> inspect to look at the HTML
    -   Make changes to see how it affects the website
    -   Can be used on resulting HTMLs from rendering of quarto to help see structure and aid in writing of CSS to style
    -   See how other people's websites are structured
-   [Mozilla web docs for help with fx. CSS](https://developer.mozilla.org/en-US/docs/Web/CSS)
-   Use of internal packages to streamline process of creating and using templates
    -   Fx. function `create_zelus_html` to create project with files needed for template

## Closeread: Bringing Scrollytelling to Quarto

### Session description

*Scrollytelling is a style of web design that transitions graphics and text as a user scrolls, allowing stories to progress naturally. Despite its power, scrollytelling typically requires specialist web dev skills beyond the reach of many data scientists. Closeread is a Quarto extension that makes a wide range of scrollytelling techniques available to authors without traditional web dev experience, with support for cross-fading plots, graphics and other chunk output alongside narrative content. You can zoom in on poems, prose and images, as well as highlighting important phrases of text.*

*Finally, Closeread allows authors with experience in Observable JS to write their own animated graphics that update smoothly as scrolling progresses.*

### Session notes

Did not watch this session.